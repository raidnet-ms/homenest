# doorlock sensore porta
output:
  - platform: gpio
    pin: $door_lock
    id: latch
lock:
  - platform: template
    name: "Avvio mandate"
    icon: "mdi:lock-outline"
#    output: latch
    on_lock:
      if:
        condition:
#          lambda: 'return id(opening_$devicename).state;'
          binary_sensor.is_on: doorsensor
        then:
        - logger.log: "Chiudere prima la porta!"
        - display.page.show: first_close_door
        - delay: 200ms
#        wait_until:
#          binary_sensor.is_off: doorsensor
        else:
          - output.turn_on: latch
          - delay: 800ms
          - output.turn_off: latch
#          - lock.open: latch
          - logger.log: "Avvio mandate serratura..."
# mostra stato su display
          - delay: 1s #delay per mostrare prima l'icona nfc
          - display.page.show: doorlock
          - delay: 2s
#        - lambda: id(door_lock).publish_state(true);
          - logger.log: "Serratura chiusa."
#        - binary_sensor.template.publish:
#            id: lockdoor
#            state: OFF
# mostra home su display
          - display.page.show: home
    on_unlock:
      if:
        condition:
          binary_sensor.is_off: doorsensor
        then:
        - display.page.show: doorlock
        - output.turn_on: latch
        - delay: 800ms
        - output.turn_off: latch
        - delay: 3s
        - logger.log: "Serratura aperta."

#        - component.update: display01
        # mostra home su display
        - display.page.show: home   #se abilito questo va in conflitto con il boot e interrompe il display wait connection



#        - wait_until:
#            lock.is_locked: door_lock 
#        - display.page.show: home


#    on_turn_on:
#     - logger.log: "Verifico chiusura porta"
#     - wait_until:
#         binary_sensor.is_on: doorsensor
#     - logger.log: "La porta è chiusa bene"
#     - delay: 1s
#     - switch.turn_on: door_lock
#     - logger.log: "Switch Turned On!"
#     - delay: 5s
#     - switch.turn_off: door_lock
#     - logger.log: "Switch Turned Off!"

#    on_turn_off:
#        then:
#        - logger.log: "Avvio mandate serratura..."
#        - switch.turn_off: door_lock
#        - delay: 5s
#        - lambda: id(door_lock).publish_state(true);
#        - logger.log: "Serratura aperta."
#        - switch.turn_off: door_lock


#     - logger.log: "Verifico chiusura porta"
#     - wait_until:
#         binary_sensor.is_on: doorsensor
#     - logger.log: "La porta è chiusa bene"
#     - delay: 2s
#     - switch.turn_off: door_lock
#     - logger.log: "Switch Turned Off!"